#!/usr/bin/env python
# -*- coding: utf-8 -*-  
# by zhangzhi @2014-08-30 13:39:17 
# Copyright 2014 NONE rights reserved.


"""
by this prog, I import new data wa crawl into 
the table:


"""

import sys
import os
import util
import time
import re
import shutil

import MySQLdb
import database
import db_config
_db = None


theTime = time.time( ) - 3600*24

outputPath = "../output/"
izhuomiDir = "/Users/cheungzee/opdir/bstrp/izhuomi-data"
monStr = time.strftime('%Y%m', time.localtime(theTime))
monUrl = 'izhuomi-data/' + monStr + '/'
copyToPath = os.path.join(izhuomiDir, monStr)

def update():
    #find today's keyfiles 
    date = util.getDateStamp(theTime) 
    tsDirs = os.listdir(outputPath)
    for tsDir in tsDirs:
        if tsDir.startswith(date):
            for f in os.walk(os.path.join(outputPath, tsDir)):
                if os.path.basename(f[0]).startswith('_content_') and f[1] == []:
                    print f
                    key = os.path.basename(f[0])
                    meta = util.loadJsonFile(os.path.join(f[0], 'meta.json'))
                    if meta:
                        #got cha
                        classification = 'VOA, ' + meta['siteTitle'] 
                        name = meta['title'] 
                        url = os.path.join(monUrl, key)
                        ori_url = meta['url']
                        ori_pub_date = meta['date']
                        if re.match("\d+/\d+/\d+", ori_pub_date):
                            ori_pub_date = util.timeStr2timeStr(ori_pub_date, "%m/%d/%Y", "%Y-%m-%d")
                        if 'content.jpg' in f[2]:
                            contentPic = 'content.jpg'
                            contentPicCaption = meta['contentPicCaptions'][0]
                        elif 'content.png' in f[2]:
                            contentPic = 'content.png'
                            contentPicCaption = meta['contentPicCaptions'][0]
                        for v in (classification, name, url, ori_url, ori_pub_date, contentPic, contentPicCaption):
                            print v
                        # cp
                        dest = os.path.join(copyToPath, key)
                        src = f[0]
                        shutil.copytree(f[0], dest) 
                        # insert it
                        # xxx

def initDb():
    global _db
    try:
        _db = database.Connection(**iz_db)
    except Exception, e:
        print "Exception:", e
        return False
    return True

def quitDb():
    _db.close()

if __name__ == '__main__':
    update()

